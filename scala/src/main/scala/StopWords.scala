
import scala.collection.immutable.TreeSet

object StopWords
{
	val stopWordList =
		"a" ::
		"about" ::
		"above" ::
		"after" ::
		"again" ::
		"against" ::
		"all" ::
		"am" ::
		"an" ::
		"and" ::
		"any" ::
		"are" ::
		"as" ::
		"at" ::
		"be" ::
		"because" ::
		"been" ::
		"before" ::
		"being" ::
		"below" ::
		"between" ::
		"both" ::
		"but" ::
		"by" ::
		"cannot" ::
		"could" ::
		"couldnt" ::
		"did" ::
		"do" ::
		"does" ::
		"doing" ::
		"down" ::
		"during" ::
		"each" ::
		"few" ::
		"for" ::
		"from" ::
		"further" ::
		"had" ::
		"hadnt" ::
		"has" ::
		"hasnt" ::
		"have" ::
		"havent" ::
		"having" ::
		"he" ::
		"her" ::
		"here" ::
		"hers" ::
		"herself" ::
		"him" ::
		"himself" ::
		"his" ::
		"how" ::
		"hows" ::
		"i" ::
		"if" ::
		"in" ::
		"into" ::
		"is" ::
		"it" ::
		"itself" ::
		"let" ::
		"me" ::
		"more" ::
		"most" ::
		"my" ::
		"myself" ::
		"no" ::
		"nor" ::
		"not" ::
		"of" ::
		"off" ::
		"on" ::
		"once" ::
		"only" ::
		"or" ::
		"other" ::
		"ought" ::
		"our" ::
		"ours" ::
		"ourselves" ::
		"out" ::
		"over" ::
		"own" ::
		"same" ::
		"she" ::
		"should" ::
		"so" ::
		"some" ::
		"such" ::
		"than" ::
		"that" ::
		"the" ::
		"their" ::
		"theirs" ::
		"them" ::
		"themselves" ::
		"then" ::
		"there" ::
		"these" ::
		"they" ::
		"this" ::
		"those" ::
		"through" ::
		"to" ::
		"too" ::
		"under" ::
		"until" ::
		"up" ::
		"very" ::
		"was" ::
		"we" ::
		"were" ::
		"what" ::
		"when" ::
		"where" ::
		"which" ::
		"while" ::
		"who" ::
		"whom" ::
		"why" ::
		"with" ::
		"wont" ::
		"would" ::
		"wouldnt" ::
		"you" ::
		"your" ::
		"yours" ::
		"yourself" ::
		"yourselves" :: Nil
		
	val stopWordSet = stopWordList.foldLeft( TreeSet[String]() )( (x,y) => x + y )
}

